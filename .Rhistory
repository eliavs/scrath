a <- ggplot(data = foo, aes(c(new_date,harshama_date)))
a
a <- ggplot(data = foo, aes(c(new_date,harshama_date))) + stat_ecdf()
a
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
a <- ggplot(data = foo, aes(c(new_date,harshama_date))) + stat_ecdf()
a
a <- ggplot(data = foo, aes(c(new_date,harshama_date))) + stat_ecdf() +stat_ecdf()
a
?aes
a <- ggplot(data = foo, aes(new_date,harshama_date)) + stat_ecdf() +stat_ecdf()
a
a <- ggplot(data = foo, aes(new_date) + stat_ecdf() +stat_ecdf()
)
a <- ggplot(data = foo, aes(new_date)) + stat_ecdf() +stat_ecdf()
a
a <- ggplot(data = foo, aes(new_date)) + stat_ecdf() +stat_ecdf(data=foo,aes(harshama_date))
a
a <- ggplot(data = foo, aes(new_date)) + stat_ecdf() +stat_ecdf(data=foo,aes(harshama_date), color = "green")
a
a <- ggplot(data = foo, aes(new_date), color = "red") + stat_ecdf() +stat_ecdf(data=foo,aes(harshama_date), color = "green")
a
a <- ggplot(data = foo, aes(new_date, color = "red")) + stat_ecdf() +stat_ecdf(data=foo,aes(harshama_date), color = "green")
a
?aes
a <- ggplot(data = foo, aes(x = c(new_date,harshama_date), color = c("red","green")) + stat_ecdf()
a
a <- ggplot(data = foo, aes(x = c(new_date,harshama_date), color = c("red","green"))) + stat_ecdf()
a
a <- ggplot(data = foo, aes(x = c(new_date), color = c("red","green"))) + stat_ecdf()
a
a <- ggplot(data = foo, aes(x = c(new_date,harshama_date), color = c("red","green"))) + stat_ecdf()
a
?aes
a <- ggplot(data = foo, aes(new_date,harshama_date), color = c("red","green")) + stat_ecdf()
a
a <- ggplot(data = foo, aes(x = c(new_date,harshama_date), color = c("red","green"))) + stat_ecdf()
a
a <- ggplot(data = foo, aes(x = c(new_date,harshama_date), color = c("red","green"))) + stat_ecdf() + stat_ecdf()
a
a <- ggplot(data = foo, aes(x = c(new_date,harshama_date), color = c("red","green"))) + stat_ecdf() + stat_ecdf()
a
a <- ggplot(data = foo, vector(x = c(new_date,harshama_date), color = c("red","green"))) + stat_ecdf() + stat_ecdf()
a <- ggplot(data = foo, c(x = c(new_date,harshama_date), color = c("red","green"))) + stat_ecdf() + stat_ecdf()
a <- ggplot(data = foo, c(x = c(new_date,harshama_date), color = c("red","green"))) + stat_ecdf()
a <- ggplot(data = foo, c(x = c(new_date,harshama_date)), color = c("red","green")) + stat_ecdf()
a <- ggplot(data = foo, c(new_date,harshama_date)), color = c("red","green")) + stat_ecdf()
a <- ggplot(data = foo, aes(new_date,harshama_date), color = c("red","green")) + stat_ecdf()
a
a <- ggplot(data = foo, aes(c(new_date,harshama_date)), color = c("red","green")) + stat_ecdf()
a
a <- ggplot(data = foo, aes(c(new_date,harshama_date), color = c("red","green"))) + stat_ecdf()
a
a <- ggplot(data = foo, aes(c(new_date,harshama_date)), color = c("red","green")) + stat_ecdf()
a
a <- ggplot(data = foo, aes(x=c(new_date,harshama_date)), color = c("red","green")) + stat_ecdf()
a
a <- ggplot(data = foo, aes(c(new_date,harshama_date), color = c("red","green"))) + stat_ecdf()
a
?color
?data.frame
df<-data.fram(foo$new_date, foo$harshama_date)
df<-data.frame(foo$new_date, foo$harshama_date)
df
a <- ggplot(data = foo, aesx =df, color = c("red","green"))) + stat_ecdf()
a <- ggplot(data = foo, aesx =df, color = c("red","green")) + stat_ecdf()
a
a <- ggplot(data = foo, aes(x =df, color = c("red","green"))) + stat_ecdf()
a
?gl
gl(2,10)
df<-data.frame(foo$new_date, foo$harshama_date, g = gl(2, 100))
df
a <- ggplot(data = foo, aes(x =df, color = g)) + stat_ecdf()
a
df<-data.frame(foo$new_date, foo$harshama_date, g = gl(2, 100))
head(df)
?gl
df<-data.frame(foo$new_date, foo$harshama_date, g = gl(2, len(df)))
df<-data.frame(foo$new_date, foo$harshama_date, g = gl(2, len(df[1])))
len(df)
length(df)
length(df[1])
length(df[1,])
length(df[,1])
df<-data.frame(foo$new_date, foo$harshama_date, g = gl(2, length(df[,1])))
a <- ggplot(data = foo, aes(x =df, color = g)) + stat_ecdf()
a
df<-data.frame(foo$new_date, foo$harshama_date, g = gl(2, length(df[,1])))
a <- ggplot(data = df, aes(x =df, color = g)) + stat_ecdf()
a
df <- data.frame(x = c(foo$new_date,foo$harshama_date),g = gl(2, 100))
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf()
length(foo[1])
length(foo[,1])
df <- data.frame(x = c(foo$new_date,foo$harshama_date),g = gl(2, length(foo[,1])))
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf()
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות")
a
?labs
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות") + guides(color = guide_legend(title = "other", label = FALSE))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות") + guides(color = guide_legend(title = "other",))
a
?guide_legend
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות") + guides(color = guide_legend(title = "other", label=F))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות") + guides(color = guide_legend(title = "other", label=T))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות") + guides(color = guide_legend(title = "other", label= FALSE
))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות") + guides(color = guide_legend(title = "other", label=T))
a
?labs
legend
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour("הרשמה", "קבלה")) + guides(color = guide_legend(title = "other", label=T))
ש
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour= c("הרשמה", "קבלה")) + guides(color = guide_legend(title = "other", label=T))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour= c("הרשמה", "קבלה"))+ guides(color = guide_legend(title = "other", label=T))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour=c("a","b")) +guides(color = guide_legend(title = "other", label=T))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() + +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour=c("a","b"))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() + labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour=c("a","b"))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() + labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour=c("a","b"))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() + labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour="מקרא" )
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() + labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour="מקרא" ,label = F)
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() + labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour="מקרא" ,label = c("a","b"))
a
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() + labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour="מקרא" )
a
?gl
df <- data.frame(x = c(foo$new_date,foo$harshama_date),g = gl(2, length(foo[,1]),laclels =c("har","kabala")))
df <- data.frame(x = c(foo$new_date,foo$harshama_date),g = gl(2, length(foo[,1]),lablels =c("har","kabala")))
df <- data.frame(x = c(foo$new_date,foo$harshama_date),g = gl(2, length(foo[,1]),labels =c("har","kabala")))
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() + labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour="מקרא" )
a
df <- data.frame(x = c(foo$new_date,foo$harshama_date),g = gl(2, length(foo[,1]),labels =c("הרשמה","קבלה")))))
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות")
df <- data.frame(x = c(foo$new_date,foo$harshama_date),g = gl(2, length(foo[,1]),labels =c("הרשמה","קבלה")))
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() + labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות", colour="מקרא" )
ש
df <- data.frame(x = c(foo$new_date,foo$harshama_date),g = gl(2, length(foo[,1]),labels =c("הרשמה","קבלה")))
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות
df <- data.frame(x = c(foo$new_date,foo$harshama_date),g = gl(2, length(foo[,1]),labels =c("הרשמה","קבלה")))
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות")
ש
a
df <- data.frame(x = c(foo$new_date,foo$harshama_date),g = gl(2, length(foo[,1]),labels =c("תאריך הרשמה", "תאריך החלטה")))
a <- ggplot(data = df, aes(x , color = g)) + stat_ecdf() +labs(title = "תאריכי הרשמה", x= " תאריך", y= "כמות")
ש
a
runApp()
summary(f00)
summary(foo)
summary(foo[7])
plot(foo[7])
?boxplot
boxplot(foo[7])
boxplot(foo[21]~foo[7])
boxplot(foo[21],foo[7])
boxplot(foo[7],foo[21])
boxplot(foo[21])
pie(foo[7])
pie(foo[7],)
pie(,foo[7])
pie(foo[,7])
pie(foo[7,])
pie(foo[7])
str(foo[7])
view
View(foo[7])
View(str(foo[7]))
?שדץכשבאםר
?as.factor
as.factor(foo[7])
pairs(foo)
runApp()
plot.factor(foo[7])
summary(foo[7])
summary(as.factor(foo[7]))
summary(as.factor(sort(foo[7])))
sort(foo[7])
?sort
foo[7]
View(foo[7])
View(str(foo[7]))
summary()
as.factor
?as.factor
as.factor(as.character(foo[7]))
factorial<-as.factor(as.character(foo[7]))
summary(factorial)
str(factorial)
factorial<-as.factor(as.character(foo[7]),levels = 2)
factorial<-factor(as.character(foo[7]),levels = 2)
str(factorial)
factorial<-factor(as.character(foo[7]),levels = c("ז","נ"))
str(factorial)
כשבאםרןשך
factorial
runApp()
qplot(foo[7])
qplot(foo[7])+geom_boxplot()
qplot(data =foo, aes(מין))+geom_boxplot()
qplot(data =foo, aes("מין"))+geom_boxplot()
qplot(data =foo+geom_boxplot()
()
ggplot(data =foo, aes("מין"))+geom_boxplot()
ggplot(data =foo, aes("מין", "ציון.עברית"))+geom_boxplot()
ggplot(data =foo, aes("מין", "ציון.עברית"))
ggplot(data =foo, aes("מין", "ציון.עברית"))+geom_boxplot()
ggplot(data =foo, aes("ציון.עברית","מין"))+geom_boxplot()
foo$מין
summary(foo$מין)
foo$מין<-as.factor(foo$מין)
ggplot(data =foo, aes("ציון.עברית","מין"))+geom_boxplot()
plot(foo$מין)
map_data<- foo[!is.na(data1$x),]
map_data<- foo[!is.na(foo$x),]
a<-aggregate(map_data[c(21,26,27)], by = list(map_data$name), FUN = mean)
a<-aggregate(map_data[c(21,26,27)], by = list(map_data$name), FUN = count)
View(a)
View(foo)
View(foo[foo$name=="אלעד"])
View(foo[foo$name=="אלעד",])
View(foo[foo$setid==26,])
a<-aggregate(map_data[c(21,26,27)], by = list(map_data$setid), FUN = count)
View(a)
View(foo[foo$setid==13])
View(foo[foo$setid==13,])
View(foo[foo$setid==16,])
a<-aggregate(map_data[c(21,26,27)], by = list(map_data$name), FUN = count)
View(a)
a<-aggregate(map_data[c(21,26,27,25)], by = list(map_data$name), FUN = count)
View(a)
a<-aggregate(map_data[c(21,26,27,25)], by = list(map_data$name), FUN = mean)
View(a)
a<-aggregate(map_data[c(21,26,27,25)], by = list(map_data$name), FUN = mean)
a<-aggregate(map_data[c(21,26,27,25)], by = list(map_data$name), FUN = count)
View(a)
a<-aggregate(map_data[c(21,26,27,25)], by = list(map_data$name), FUN = mean)
View(a)
a<-aggregate(map_data[c(21,26,27,25)], by = list(map_data$name), FUN = count)
View(a)
a<-aggregate(map_data[c(25)], by = list(map_data$name), FUN = count)
View(a)
a<-aggregate(map_data, by = list(map_data$name), FUN = count)
a<-aggregate( by = list(map_data$name), FUN = count)
a<-aggregate(" ", by = list(map_data$name), FUN = count)
a<-aggregate(map_data[c(26)], by = list(map_data$name), FUN = count)
View(a)
?aggregate
a<-aggregate(map_data[c(26)], by = list(map_data$name), FUN = count, simplify = T)
View(a)
a<-aggregate(map_data[c(26)], by = list(map_data$name), FUN = count, simplify = F)
View(a)
a[2]
a[2,2]
freq(a[2])
(a[1])
(a[2])
a<-aggregate(map_data[c(25)], by = list(map_data$name), FUN = count, simplify = F)
View(a)
a[2]
unlist(a[2])
unlist(a[2])[1]
unlist(a[2])[2]
unlist(a[2])[2,]
unlist(a[2])[
]
unlist(a[2])
length(unlist(a[2]))
unlist(a[2])[1]
unlist(a[2])[2]
names(unlist(a[2]))
values(unlist(a[2]))
str(unlist(a[2]))
*(unlist(a[2]))
(a[2]))
(a[2])
a[2]
a[21]
a[2,1]
a[1,2]
unlist(a[1,2])
a[1,2]$freq
a[2]$freq
a[2]@freq
a[2].freq
a[2]
str(a[2])
str(a$freq)
str(a[[freq]])
unlist(a)
a<-aggregate(map_data[c(25)], by = list(map_data$name), FUN = count, simplify = T)
View(a)
?count
count(foo,name)
count(foo,vars = name)
count(foo,vars = foo$name)
table(foo$name)
View(table(foo$name))
View(table(foo$name)[2])
View(table(foo$name)[,2])
View(table(foo$name)[2,])
View(table(foo$name))
str(table(foo$name))
vector(table(foo$name))
as.vector(table(foo$name))
View(as.vector(table(foo$name)))
a$size<-as.vector(table(foo$name))
View(a)
plot(a[1],a[3])
savehistory()
a<-aggregate(map_data[c(21,26,27)], by = list(map_data$name), FUN = mean)
a$size<-as.vector(table(foo$name))
View(a)
pal1 <- colorNumeric(palette = heat.colors(10),  domain = a$ציון.עברית,10)
map <- leaflet() %>% addTiles()
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),size = ~size),radius = 3, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),size = ~size,radius = 3, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = size, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~size, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~(size/10), popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
a
map1
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~(size/100), popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
scale(a%size)
scale(a$size)
?scale
scale(a$size,scale = F)
scale(a$size,scale = T)
sweep(a$size,1)
sweep(a$size,1,5)
sweep(a$size)
scale(a$size,scale = T)
scale(a$size)
scale(a$size, center = T)
scale(a$size, center = F)
a$newsize<- scale(a$size, center = F)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
?addCircleMarkers
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1, fillOpacity= 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1,fillColor = ~pal1(ציון.עברית)
)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]], fillcolor = ~pal1(ציון.עברית)) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]], fillColor = ~pal1(ציון.עברית)) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]], fillColor = color) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]], fillColor = ~pal1(ציון.עברית)) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]], fillColor = ~pal1(ציון.עברית), fillOpacity = 1) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
savehistory()
runApp()
cls
cls()
runApp()
View(a)
View(a)
runApp()
library(XML)
install.packages("XML")
library(rgdal)
?ogr2ogr
?readOGR
readOGR("All Bible Places.kml", "C:/Users/eliav/Documents/GitHub/djangoapp")
readOGR("C:/Users/eliav/Documents/GitHub/djangoapp", "All Bible Places.kml")
readOGR("C:/Users/eliav/Documents/GitHub/djangoapp/All Bible Places.kml", "All Bible Places")
a<-readOGR("C:/Users/eliav/Documents/GitHub/djangoapp/All Bible Places.kml", "All Bible Places")
summary(a)
a@data$Name
foo <- data.frame(a@data$Name,a@coords)
head(foo)
?write.fale
gc(verbose =T)
rm(list=(map_data,mapdata,new_data))
rm(list=ב(map_data,mapdata,new_data))
rm(list=c(map_data,mapdata,new_data))
rm(map_data)
rm(mapdata)
rm(new_data)
gc(verbose =T)
rm(raw_data)
q()
gc(verbose = T)
rm(raw_date)
rm(raw_harshama)
rm(rawdata)
rm(app)
rm(factorial)
rm(map)
rm(map1)
rm(pal1)
rm(df)
?write.file
?write.table
write.csv(foo, "list of Christian  names.csv ")
foo1<-data.fram(a@data$name, a@data$Descriotion, a@coords)
foo1<-data.frame(a@data$name, a@data$Descriotion, a@coords)
foo1<-data.frame(a@data$name, a@data$Description, a@coords)
a@data$Description
write.table(a@data$Description, "descrp.txt")
?read.table
books <- read.table("descrip.txt", sep = ",")
dir()
books <- read.table("descrp.txt", sep = ",")
foo[130]
foo[130,]
ggmap
library(ggmap)
q()
library(shiny)
runApp(0)
runApp()
Sys.setlocale(category = "LC_ALL", locale = "hebrew")
runApp()
app = shinyApp(
ui = fluidPage(leafletOutput('myMap')),
server = function(input, output) {
map = leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 17)
output$myMap = renderLeaflet(map)
}
)
if (interactive()) print(app)
runApp()
runApp()
q()
library(shiny)
runApp(0)
runApp()
q()
library(shiny)
Sys.setlocale(category = "LC_ALL", locale = "hebrew")
runApp()
app = shinyApp(
ui = fluidPage(leafletOutput('myMap')),
server = function(input, output) {
map = leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 17)
output$myMap = renderLeaflet(map)
}
)
if (interactive()) print(app)
runApp()
q()
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t", fileEncoding = "UTF-80")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t", fileEncoding = "UTF-8")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t", fileEncoding = "UTF-8")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t", fileEncoding = "UTF-8")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, sep = "\t", fileEncoding = "UTF-8")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, sep = "\t")
a
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, sep = "\t")
?readline
?readLines
a <- readLines("C:/Users/eliav/Downloads/2014.txt")
a
head(a)
View(head(a,5))
a <- readLines("C:/Users/eliav/Downloads/2014.txt", fileEncoding="UTF-8")
a
a <- read.csv("C:/Users/eliav/Downloads/2014.txt", fileEncoding="UTF-8", header = T)
a <- read.csv("C:/Users/eliav/Downloads/2014.txt", header = T)
head(a)
View(head(a))
Sys.setlocale(category = "LC_ALL", locale = "hebrew")
View(head(a))
a <- read.csv("C:/Users/eliav/Downloads/2015a.txt", header = T)
a <- read.csv("C:/Users/eliav/2015a.txt", header = T)
View(head(a))
a <- read.csv("C:/Users/eliav/2015a.txt", header = T)
View(head(a))
a <- read.csv("C:/Users/eliav/2015.txt", header = T)
View(head(a))
getwd()
system("head -n 2016.txt>sed 's/\t/,/g' > file.txt")
system("head -n 2016.txt>sed 's/\\t/,/g' > file.txt")
system("head -n -1 2016.txt>sed 's/\t/,/g' > file.txt")
system("head -n -1 2016.txt|sed 's/\t/,/g' > file.txt")
system("head -n -1 2016.txt\|sed 's/\t/,/g' > file.txt")
system("sed 's/\t/,/g' 2016.txt| tail -n +2 > file.txt")
getwd()
system("ls")
system("sed 's/\t/,/g' 2016.txt")
system("sed 's/\t/,/g' 2016.txt | head")
system2("sed 's/\t/,/g' 2016.txt | head")
?shell
shell("sed 's/\t/,/g' 2016.txt | head")
shell("sed 's/\t/,/g' 2016.txt | tail -n +2 > file.txt")
savehistory()
a<-read.csv("file.txt", header = T)
View(head(a))
savehistory()
