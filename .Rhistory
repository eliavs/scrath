count(foo,vars = foo$name)
table(foo$name)
View(table(foo$name))
View(table(foo$name)[2])
View(table(foo$name)[,2])
View(table(foo$name)[2,])
View(table(foo$name))
str(table(foo$name))
vector(table(foo$name))
as.vector(table(foo$name))
View(as.vector(table(foo$name)))
a$size<-as.vector(table(foo$name))
View(a)
plot(a[1],a[3])
savehistory()
a<-aggregate(map_data[c(21,26,27)], by = list(map_data$name), FUN = mean)
a$size<-as.vector(table(foo$name))
View(a)
pal1 <- colorNumeric(palette = heat.colors(10),  domain = a$ציון.עברית,10)
map <- leaflet() %>% addTiles()
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),size = ~size),radius = 3, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),size = ~size,radius = 3, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = size, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~size, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~(size/10), popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
a
map1
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~(size/100), popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
scale(a%size)
scale(a$size)
?scale
scale(a$size,scale = F)
scale(a$size,scale = T)
sweep(a$size,1)
sweep(a$size,1,5)
sweep(a$size)
scale(a$size,scale = T)
scale(a$size)
scale(a$size, center = T)
scale(a$size, center = F)
a$newsize<- scale(a$size, center = F)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
?addCircleMarkers
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1, fillOpacity= 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]]) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1,fillColor = ~pal1(ציון.עברית)
)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]], fillcolor = ~pal1(ציון.עברית)) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]], fillColor = ~pal1(ציון.עברית)) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]], fillColor = color) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]], fillColor = ~pal1(ציון.עברית)) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
map1 <- map %>% addCircleMarkers(data = a, lat = ~y, lng = ~x, color = ~pal1(ציון.עברית),radius = ~newsize, popup = a[[1]], fillColor = ~pal1(ציון.עברית), fillOpacity = 1) %>% addLegend(position = "bottomleft",pal = pal1, values = a$ציון.עברית    ,title = "מקרא",opacity = 1)
map1
savehistory()
runApp()
cls
cls()
runApp()
View(a)
View(a)
runApp()
library(XML)
install.packages("XML")
library(rgdal)
?ogr2ogr
?readOGR
readOGR("All Bible Places.kml", "C:/Users/eliav/Documents/GitHub/djangoapp")
readOGR("C:/Users/eliav/Documents/GitHub/djangoapp", "All Bible Places.kml")
readOGR("C:/Users/eliav/Documents/GitHub/djangoapp/All Bible Places.kml", "All Bible Places")
a<-readOGR("C:/Users/eliav/Documents/GitHub/djangoapp/All Bible Places.kml", "All Bible Places")
summary(a)
a@data$Name
foo <- data.frame(a@data$Name,a@coords)
head(foo)
?write.fale
gc(verbose =T)
rm(list=(map_data,mapdata,new_data))
rm(list=ב(map_data,mapdata,new_data))
rm(list=c(map_data,mapdata,new_data))
rm(map_data)
rm(mapdata)
rm(new_data)
gc(verbose =T)
rm(raw_data)
q()
gc(verbose = T)
rm(raw_date)
rm(raw_harshama)
rm(rawdata)
rm(app)
rm(factorial)
rm(map)
rm(map1)
rm(pal1)
rm(df)
?write.file
?write.table
write.csv(foo, "list of Christian  names.csv ")
foo1<-data.fram(a@data$name, a@data$Descriotion, a@coords)
foo1<-data.frame(a@data$name, a@data$Descriotion, a@coords)
foo1<-data.frame(a@data$name, a@data$Description, a@coords)
a@data$Description
write.table(a@data$Description, "descrp.txt")
?read.table
books <- read.table("descrip.txt", sep = ",")
dir()
books <- read.table("descrp.txt", sep = ",")
foo[130]
foo[130,]
ggmap
library(ggmap)
q()
library(shiny)
runApp(0)
runApp()
Sys.setlocale(category = "LC_ALL", locale = "hebrew")
runApp()
app = shinyApp(
ui = fluidPage(leafletOutput('myMap')),
server = function(input, output) {
map = leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 17)
output$myMap = renderLeaflet(map)
}
)
if (interactive()) print(app)
runApp()
runApp()
q()
library(shiny)
runApp(0)
runApp()
q()
library(shiny)
Sys.setlocale(category = "LC_ALL", locale = "hebrew")
runApp()
app = shinyApp(
ui = fluidPage(leafletOutput('myMap')),
server = function(input, output) {
map = leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 17)
output$myMap = renderLeaflet(map)
}
)
if (interactive()) print(app)
runApp()
q()
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t", fileEncoding = "UTF-80")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t", fileEncoding = "UTF-8")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t", fileEncoding = "UTF-8")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, skip = 1, sep = "\t", fileEncoding = "UTF-8")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, sep = "\t", fileEncoding = "UTF-8")
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, sep = "\t")
a
a <- read.table("C:/Users/eliav/Downloads/2014.txt", header = T, sep = "\t")
?readline
?readLines
a <- readLines("C:/Users/eliav/Downloads/2014.txt")
a
head(a)
View(head(a,5))
a <- readLines("C:/Users/eliav/Downloads/2014.txt", fileEncoding="UTF-8")
a
a <- read.csv("C:/Users/eliav/Downloads/2014.txt", fileEncoding="UTF-8", header = T)
a <- read.csv("C:/Users/eliav/Downloads/2014.txt", header = T)
head(a)
View(head(a))
Sys.setlocale(category = "LC_ALL", locale = "hebrew")
View(head(a))
a <- read.csv("C:/Users/eliav/Downloads/2015a.txt", header = T)
a <- read.csv("C:/Users/eliav/2015a.txt", header = T)
View(head(a))
a <- read.csv("C:/Users/eliav/2015a.txt", header = T)
View(head(a))
a <- read.csv("C:/Users/eliav/2015.txt", header = T)
View(head(a))
getwd()
system("head -n 2016.txt>sed 's/\t/,/g' > file.txt")
system("head -n 2016.txt>sed 's/\\t/,/g' > file.txt")
system("head -n -1 2016.txt>sed 's/\t/,/g' > file.txt")
system("head -n -1 2016.txt|sed 's/\t/,/g' > file.txt")
system("head -n -1 2016.txt\|sed 's/\t/,/g' > file.txt")
system("sed 's/\t/,/g' 2016.txt| tail -n +2 > file.txt")
getwd()
system("ls")
system("sed 's/\t/,/g' 2016.txt")
system("sed 's/\t/,/g' 2016.txt | head")
system2("sed 's/\t/,/g' 2016.txt | head")
?shell
shell("sed 's/\t/,/g' 2016.txt | head")
shell("sed 's/\t/,/g' 2016.txt | tail -n +2 > file.txt")
savehistory()
a<-read.csv("file.txt", header = T)
View(head(a))
savehistory()
library(shiny)
runApp()
Sys.setlocale(category = "LC_ALL", locale = "hebrew")
runApp()
runApp()
runApp()
runApp()
?paste
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
l = list("a", "b")
c(l,"c")
l
l <- c(l,"c")
l
l <-list()
l
l<-(l, "a")
l<-c(l, "a")
l
runApp()
runApp()
runApp()
runApp()
?tolower
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?eval
?as.name
runApp()
?list.files
?llply
runApp()
runApp()
runApp()
runApp()
?do.call
d = "g"
do.call(d)
do.call("d")
a = 5
do.call(a,*2)
do.call(a,'*2')
do.call('a','*2')
do.call('a',/2)
do.call('a',sum)
do.call('a',sum())
do.call('a',sum(a)
)
runApp()
runApp()
runApp()
runApp()
?trimws
??trimws
require(gdata)
runApp()
runApp()
?get
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
q()
library(shiny)
shinyServer(function(input, output,session) {
Sys.setlocale(category = "LC_ALL", locale = "hebrew")
Sys.setlocale(category = "LC_ALL", locale = "hebrew")
runApp()
hist
runApp()
rm(list=c("l","d"))
rm(list=c("app","a"))
rm(foo)
?gc
gcinfo(verbose)
gcinfo()
gc(verbose = getOption("verbose"))
gc(verbose = getOption("verbose"))
gc()
gcinfo(True)
gcinfo(TRUE)
gcinfo(TRUE)
gc()
?Memory
q()
retwd()
getwd()
dir()
file_1 <- read.csv("file1.txt", header=T, stringsAsFactors =F, fileEncoding = "UTF-8" )
Sys.setlocale(category = "LC_ALL", locale = "hebrew")
file_1 <- read.csv("file1.txt", header=T, stringsAsFactors =F, fileEncoding = "UTF-8" )
mapdata <-read.csv("places.csv", stringsAsFactors =F, header=T,fileEncoding = "UTF-8")
mapdata <-read.csv("places.csv", stringsAsFactors =F, header=T,fileEncoding = "UTF-8")
names(file_1)[214]<-"setid"
new_data<-join(file_1,mapdata,"setid")
raw_date<-new_data[36]
foo <- unlist(strsplit(unlist((raw_date),use.names = F),"/"))
foo <-as.integer(foo)
df<-data.frame(x=c(foo[seq(1,length(foo),3)]),y=c(foo[seq(2,length(foo),3)]),z=c(foo[seq(3,length(foo),3)]))
names(new_data)[36]<-"dec_date"
new_data$new_date<-strptime(paste(as.character(df[,1]),as.character(df[,2])),format="%e %m")
raw_harshama<-new_data[37]
foo <- unlist(strsplit(unlist(raw_harshama,use.names = F),"/"))
df<-data.frame(x=c(foo[seq(1,length(foo),3)]),y=c(foo[seq(2,length(foo),3)]),z=c(foo[seq(3,length(foo),3)]))
names(new_data)[37]<-"har_date"
new_data$harshama_date<-strptime(paste(as.character(df[,1]),as.character(df[,2])),format="%e %m")
assign(paste("new_data_",file,sep =""), new_data)
library(htmlwidgets)
library(lubridate) #to play with dates
library(ggplot2)
library(plyr) #combining the data
library(ggmap)
library(leaflet)
library(reshape2)
mapdata <-read.csv("places.csv", stringsAsFactors =F, header=T,fileEncoding = "UTF-8")
names(file_1)[214]<-"setid"
new_data<-join(file_1,mapdata,"setid")
raw_date<-new_data[36]
foo <- unlist(strsplit(unlist((raw_date),use.names = F),"/"))
foo <-as.integer(foo)
df<-data.frame(x=c(foo[seq(1,length(foo),3)]),y=c(foo[seq(2,length(foo),3)]),z=c(foo[seq(3,length(foo),3)]))
names(new_data)[36]<-"dec_date"
new_data$new_date<-strptime(paste(as.character(df[,1]),as.character(df[,2])),format="%e %m")
raw_harshama<-new_data[37]
foo <- unlist(strsplit(unlist(raw_harshama,use.names = F),"/"))
df<-data.frame(x=c(foo[seq(1,length(foo),3)]),y=c(foo[seq(2,length(foo),3)]),z=c(foo[seq(3,length(foo),3)]))
names(new_data)[37]<-"har_date"
new_data$harshama_date<-strptime(paste(as.character(df[,1]),as.character(df[,2])),format="%e %m")
assign(paste("new_data_",file,sep =""), new_data)
View(new_data)
View(new_data[221])
View(new_data[220])
View(new_data[219])
ggplot(data=new_data,aes(x=dec_date,y = cumsum(פסיכומטרי)))+geomlone()
ggplot(data=new_data,aes(x=dec_date,y = cumsum(פסיכומטרי)))+geomione()
ggplot(data=new_data,aes(x=dec_date,y = cumsum(פסיכומטרי)))+ geomline()
ggplot(data=new_data,aes(x=dec_date,y = cumsum(פסיכומטרי)))+ geom_line()
ggplot(data=new_data,aes(x=dec_date,y = cumsum(פסיכומטרי)/seq_along(פסיכומטרי)))+ geom_line()
ggplot(data=new_data,aes(x=dec_date,y = cumsum(פסיכומטרי)/seq_along(פסיכומטרי)))+ geom_line() + geom_point()
ggplot(data=new_data,aes(x=dec_date,y = (פסיכומטרי)/seq_along(פסיכומטרי)))+ geom_line() + geom_point()
ggplot(data=new_data,aes(x=dec_date,y = seq_along(פסיכומטרי)))+ geom_line() + geom_point()
ggplot(data=new_data,aes(x=dec_date,y = cumsum(פסיכומטרי)/seq_along(פסיכומטרי)))+ geom_line() + geom_point()
ggplot(data=new_data,aes(x=dec_date,y = cumsum(פסיכומטרי)/seq_along(פסיכומטרי)))+ geom_point()
dd <- ddply(new_data, .(dec_date), summarise, val = sum(פסיכומטרי))
dd <- ddply(new_data, dec_date, summarise, val = sum(פסיכומטרי))
dd <- ddply(new_data, .(dec_date), summarise, val = sum(פסיכומטרי))
dd <- ddply(new_data, .(har_date), summarise, val = sum(פסיכומטרי))
View(names(new_data))
dd <- ddply(new_data, .(new_date), summarise, val = sum(פסיכומטרי))
length(names(new_data))
length(new_data)
str(new_data$dec_data)
str(new_data$dec_date)
str(new_data)
names(new_data$dec_date)
names(new_data$פסיכומרי)
names(new_data$dec_date)<-"null"
dd <- ddply(new_data, .(new_date), summarise, val = sum(פסיכומטרי))
names(new_data$dec_date)
STR(new_data$dec_date)
str(new_data$dec_date)
str(new_data$new_date)
str(new_data$harshama_date)
str(as.POSIXct((new_data$harshama_date)))
dd <- ddply(new_data, .(as.POSIXct(new_date)), summarise, val = sum(פסיכומטרי))
?ddply
dd <- ddply(new_data, .(as.POSIXct(new_date)), summarise, val = mean(פסיכומטרי))
new_data$dates <-as.POSIXct(new_data$new_date)
dd <- ddply(new_data, .(dates, summarise, val = mean(פסיכומטרי))
)
dd <- ddply(new_data, .(dates), summarise, val = mean(פסיכומטרי))
str(new_data$dates)
?filter
plot(new_data$new_date, new_data[3],  col="grey")
plot(new_data$new_date, new_data[3,],  col="grey")
plot(new_data$new_date, new_data[,3],  col="grey")
plot(new_data$new_date, new_data[,3], type="l" col="grey")
plot(new_data$new_date, new_data[,3], type="l", col="grey")
grid()
f20 <- rep(1/20, 20)
f20
y_lag <- filter(new_data[,3], f20, sides=1)
lines(x, y_lag, col="red")
lines(new_data$new_date, y_lag, col="red")
tapply(new_data$new_date, new_data[,3], mean)
plot(tapply(new_data$new_date, new_data[,3], mean))
tapply(new_data$new_date, new_data[,3], mean)
a,- tapply(new_data$new_date, new_data[,3], mean)
a<- tapply(new_data$new_date, new_data[,3], mean)
summary(a)
a<- tapply( new_data[,3],new_data$new_date mean)
a<- tapply( new_data[,3],new_data$new_date ,mean)
a<- tapply(new_data[,3],new_data$new_date ,mean)
a<- tapply(new_data$new_date, new_data[,3], mean)
?taaply
?tapply
a<- tapply(new_data[,3], new_data$new_date, mean)
a<- tapply(new_data[3], new_data$new_date, mean)
a<- tapply(new_data[[3], new_data$new_date, mean)
a<- tapply(new_data[[3]], new_data$new_date, mean)
a<- tapply(new_data[[,3]], new_data$new_date, mean)
a<- tapply(new_data[,3], new_data$new_date, mean)
a<- tapply(new_data[3], new_data$new_date, mean)
a<- tapply(new_data[3,], new_data$new_date, mean)
a<- tapply(new_data[,3], new_data$new_date, mean)
a<- tapply(new_data[,3], new_data$new_date, sum)
a<- tapply(new_data$new_date, new_data[,3] mean)
a<- tapply(new_data$new_date, new_data[,3], mean)
a<- tapply(new_data$new_date, new_data[,3], sum)
a<- tapply(new_data$new_date, new_data[,3], mean)
head(a)
a<- tapply(new_data[,3], new_data$dec_date, mean)
summary(a)
a
plot(a)
plot(a, type='l')
plot(a, type='l', col = "red")
str(a)
class(a)
data.fram(a)
data.frame(a)
summary(data.frame(a))
names(a)
data.frame(names(a), a)
?data.frame
data.frame(names(a), a, row.names=Null)
data.frame(names(a), a, row.names=NULL)
b <-data.frame(names(a), a, row.names=NULL)
summary(b)
ggplot(b,aes(names.a, y =cumsum(a))
+ geom_line
()
ggplot(b,aes(names.a, y =cumsum(a))) + geom_line()
ggplot(b,aes(names.a., y =cumsum(a))) + geom_line()
b$names.a.
ggplot(b,aes(x =names.a., y =cumsum(a))) + geom_line()
ggplot(b,aes(x ='names.a.', y =cumsum(a))) + geom_line()
ggplot(b,aes(x =names.a., y =cumsum(a))) + geom_line()
names(b)
names(b)[1]
names(b)[1]<-"nam"
names(b)[1]
ggplot(b,aes(x =nam, y =cumsum(a))) + geom_line()
ggplot(b,aes(x =nam, y =a)) + geom_line()
b
length(b)
b$a
a
b
length(b[1])
length(b[,1])
ggplot(b,aes(x =nam, y =a)) + geom_line()
summary(b)
class(b)
?ggplot
ggplot(b,aes(x =nam, y =a)) + geom_line()
plot(cumsum(b$a))
plot(cumsum(b$a),seq_along(b$a))
plot(cumsum(b$a)/seq_along(b$a))
plot(cumsum(b$a)/seq_along(b$a), type="l")
ggplot(b,aes(x =nam, y =cumsum(a))) + geom_line()
ggplot(b,aes(x =nam, y =cumsum(a))) + geom_line(aes(x =nam, y =cumsum(a)))
ggplot(b + geom_line(aes(x =nam, y =cumsum(a)))
ggplot(b) + geom_line(aes(x =nam, y =cumsum(a)))
str(b)
as.charecter(b$nam)
b$nam<-as.character(b$nam)
ggplot(b,aes(x =nam, y =cumsum(a))) + geom_line()
str(b)
b$a<-as.numeric(b$a)
str(b)
ggplot(b,aes(x =nam, y =cumsum(a))) + geom_line()
str(b)
b <- data.frame(apply(b, 2, unclass))
ggplot(b,aes(x =nam, y =cumsum(a))) + geom_line()
b
summary(b)
str(b)
b$nam<-as.character(b$nam)
b$a<-as.numeric(b$a)
str(b)
ggplot(b,aes(x =nam, y =cumsum(a))) + geom_line()
ggplot(b,aes(x =nam, y =cumsum(a), group = 1)) + geom_line()
ggplot(b,aes(x =nam, y =cumsum(a)/seq_along(a), group = 1)) + geom_line()
savehistory()
